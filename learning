http://www.wklken.me/posts/2013/12/01/git-base.html
---------------
git --global user.name "your name"
git --global user.email "email@example.com"

---------------
1. git add <file>
2. git commit -m "****"

---------------
1. git status
2. git diff

---------------
version control
    git reset HEAD^  #last version
    git reset HEAD^^
    git reset HEAD~100
1. git reset --hard commit_id 
2. git log --pretty=oneline
3. git reflog (history)

---------------
1. working directory #visable
2. repository        #hidden
    .git
        stage (index) <-- git add
        master (pointer: HEAD) <-- git commit
---------------
---------------

git checkout -- file #discard changes in working directory
git reset HEAD file #unstage

---------------
git rm file #after file deleting in working directory

---------------
github

ssh-keygen -t rsa -C "youremail@example.com"

1. cd /home/nick/.ssh
2. github--settings--SSH and GPG keys
3. paste id_rsa.pub

===============
$ unset SSH_ASKPASS

To prevent it in future, you can add the above line in your .bashrc or .bash_profile.
echo 'unset SSH_ASKPASS' >>~/.bashrc && source ~/.bashrc
===============

---------------
git remote add origin https://github.com/CynicWong/git.git
    #git remote rm origin
    #git remote add origin git@github.com:nicwon/git.git
git push -u origin master  #firt time, use -u
git push origin master

---------------
git branch                #current branch
git branch <name>         #create new branch
git checkout <name>       #switch to branch
git checkout -b <name>    #create new branch and switch to it
git merger <name>         #merger branch to master
git branch -d <name>      #delete branch
git branch -D <name>      #delete unmerged branch

---------------
git log --graph --pretty=oneline --abbrev-commit

---------------
git merge --no-ff -m "*****" <name>  #disable fast forward

---------------
git stash    #save working directory and index state 
git stash list
git stash apply
git stash drop
git stash pop

---------------
git remote
git push origin branch-name
git checkout -b branch-name origin/branch-name
git branch --set-upstream branch-name origin/branch-name
git pull

---------------
git tag <tag name>    #make a tag
git tag               #check all the tags
git tag <tag name> commit_id  #tag history commit
git show <tag name>   
git tag -a <tag name> -m "***" commit_id
git tag -s <tag name> -m "***" commit_id

---------------
git tag -d <tag name>     #delete tag
git push origin <tag name>  #push specified tag
git push origin --tags      #push all tags
git push origin :refs/tags/<tag name>  #delete remote tag

---------------
create file .gitigore on working directory, 

git add -f <file name>  #force to add file to repository
git check-ignore -v <file name>   #check if file is ignore

---------------
git config --global alias.co checkout  #set alias for checkout
or edit ~/.gitconfig
    [alias]
    co = checkout
    cm = commit
    br = branch
    st = status

---------------
---------------
git config --list
git config -e [--global]
---------------
git add [file1] [file2]
git add [dir]
git add .
git mv [file-original] [file-renamed]

---------------
vim ~/.git-credentials
https://{username}:{password}@github.com
git config --global credential.helper store
cat ~/.gitconfig
    [credential]

        helper = store

---------------
